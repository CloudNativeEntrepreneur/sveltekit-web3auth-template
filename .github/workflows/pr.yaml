name: pr

on:

  pull_request:
    branches:
      - main

jobs:

  quality:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Run Npm Quality Scripts
      run: |
        npm ci
        npm run lint --if-present
        npm run build --if-present
        npm run test --if-present
        npx codecov

  preview:
    # needs: quality
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: write
      issues: write
      pull-requests: write

    steps:

    - name: downcase REPO
      run: |
        echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ env.REPO }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: |
          ${{ steps.meta.outputs.tags }}
          ghcr.io/${{ env.REPO }}:pr-${{ github.event.pull_request.number }}-${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=ghcr.io/${{ env.REPO }}:buildcache
        cache-to: type=registry,ref=ghcr.io/${{ env.REPO }}:buildcache,mode=max

    - name: Setup Helm
      uses: azure/setup-helm@v3
    
    - name: Checkout Preview Environments Project
      uses: actions/checkout@v3
      with: 
        path: previews
        repository: cloudnativeentrepreneur/example-preview-envs
        persist-credentials: false

    - name: Create Preview from Helm template
      run: |
        mkdir -p previews/helm/templates
        helm template preview/helm/ --set pr=pr-${{ github.event.pull_request.number }} --set tag=pr-${{ github.event.pull_request.number }}-${{ github.sha }} --set headRef=${{ github.head_ref }}  > previews/helm/templates/${{ github.event.repository.name }}-pr-${{ github.event.pull_request.number }}.yaml

    - name: Commit Preview Env Changes
      run: |
        cd previews
        cat helm/templates/${{ github.event.repository.name }}-pr-${{ github.event.pull_request.number }}.yaml
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"   
        git add .
        git commit -m "promote: ${{ github.event.repository.name }}-pr-${{ github.event.pull_request.number }} ${{ github.sha }}"

    - name: Push Preview Env Changes
      uses: ad-m/github-push-action@master
      with:
        directory: previews
        github_token: ${{ secrets.GH_ORG_TOKEN }}
        repository: cloudnativeentrepreneur/example-preview-envs

    - name: Find Comment
      uses: peter-evans/find-comment@v2
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Your preview environment

    - name: Create or update comment
      uses: peter-evans/create-or-update-comment@v2
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Your preview environment has been published! :rocket:

          It may take a few minutes to spin up, but you can view it here once it's ready: [${{ github.event.repository.name }}-pr-${{ github.event.pull_request.number }}-preview](http://${{ github.event.repository.name }}.example-ui-pr-${{ github.event.pull_request.number }}-preview.127.0.0.1.sslip.io)

          You can verify the PR is ready with `kubectl`:

          ```bash
          kubectl get ksvc -n example-ui-pr-${{ github.event.pull_request.number }}-preview
          ```
        edit-mode: replace
