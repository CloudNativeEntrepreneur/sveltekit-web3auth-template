name: pr

on:

  pull_request:

jobs:

  quality:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run lint --if-present
    - run: npm run build --if-present
    - run: npm test
    - run: npx codecov

  preview:
    needs: quality
    runs-on: ubuntu-latest
    steps:

    - name: downcase REPO
      run: |
        echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ env.REPO }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: |
          ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=ghcr.io/${{ env.REPO }}:buildcache
        cache-to: type=registry,ref=ghcr.io/${{ env.REPO }}:buildcache,mode=max
    
    # - name: Setup Kube config
    #   uses: azure/k8s-set-context@v3
    #   with:
    #     method: kubeconfig
    #     kubeconfig: ${{ secrets.KUBE_CONFIG }}
    
    # - name: Deploy preview
    #   run: |
    #     # Install vCluster
    #     curl -s -L "https://github.com/loft-sh/vcluster/releases/latest" | sed -nE 's!.*"([^"]*vcluster-linux-amd64)".*!https://github.com\1!p' | xargs -n 1 curl -L -o vcluster && chmod +x vcluster;
    #     sudo mv vcluster /usr/local/bin;

    #     # Create a cluster
    #     vcluster create example-hasura-pr-${{ github.event.pull_request.number }} --namespace prs --expose 
    #     vcluster connect example-hasura-pr-${{ github.event.pull_request.number }} --namespace prs
    #     export KUBECONFIG=$PWD/kubeconfig.yaml
    #     sleep 5
    #     kubectl get ingresses

    #     # Deploy
    #     cd kustomize/overlays/preview
    #     kustomize edit set image ${{ env.REPO }}=${{ env.REPO }}:pr-${{ github.event.pull_request.number }}
    #     kustomize build | kubectl apply --filename -
    #     kubectl rollout status deployment example-hasura
    # - name: Test
    #   run: |
    #     echo "I was to lazy to write tests"
