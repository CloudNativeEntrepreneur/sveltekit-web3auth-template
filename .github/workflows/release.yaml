name: main
on:
  push:
    branches:
    - main
jobs:

  quality:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run lint --if-present
    - run: npm run build --if-present
    - run: npm test
    - run: npx codecov

  release:
    runs-on: ubuntu-latest
    needs: quality

    permissions:
      packages: write
      contents: write

    steps:

    - name: downcase REPO
      run: |
        echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
    # - name: use REPO
    #   run: echo "The value of REPO is: ${{ env.REPO }}"

    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Application Version
      id: version
      uses: paulhatch/semantic-version@v4.0.3
      with:
        major_pattern: "BREAKING CHANGE"
        minor_pattern: "feat:"
        bump_each_commit: true

    # - name: Build Changelog
    #   id: changelog
    #   uses: mikepenz/release-changelog-builder-action@v3
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update version in helm values
      uses: mikefarah/yq@master
      with:
        cmd: yq -i '.image.tag = "${{ steps.version.outputs.version_tag }}"' helm/values.yaml
    
    - name: Update version in helm chart
      uses: mikefarah/yq@master
      with:
        cmd: yq -i '.version = "${{ steps.version.outputs.version_tag }}"' helm/Chart.yaml

    - name: Commit changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -am "chore: set version to ${{ steps.version.outputs.version_tag }}"
        git tag -a ${{ steps.version.outputs.version_tag }} -m "${{ steps.version.outputs.version_tag }}"
    
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GH_ORG_TOKEN }}
        branch: ${{ steps.version.outputs.version_tag }}
        tags: true

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version_tag }}
        generate_release_notes: true
        body: ${{steps.changelog.outputs.changelog}}